using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Nop.Plugin.Payments.Qualpay.Domain.Platform
{
    /// <summary>
    /// Represents base request to subscription transaction resources
    /// </summary>
    public abstract class SubscriptionTransactionRequest : PlatformRequest
    {
        #region Properties

        /// <summary>
        /// Gets or sets an unique ID assigned by Qualpay to a merchant
        /// </summary>
        [JsonProperty(PropertyName = "merchant_id")]
        public long? MerchantId { get; set; }

        /// <summary>
        /// Gets or sets the transaction time in YYYY-MM-DD HH:MM:ss. All Times are Pacific Time. 
        /// </summary>
        [JsonProperty(PropertyName = "tran_time")]
        public string TransactionTime { get; set; }

        /// <summary>
        /// Gets or sets the date the transaction was captured by the merchant.
        /// </summary>
        [JsonProperty(PropertyName = "tran_date")]
        public string TransactionDate { get; set; }

        /// <summary>
        /// Gets or sets the transaction status
        /// </summary>
        [JsonProperty(PropertyName = "tran_status")]
        [JsonConverter(typeof(StringEnumConverter))]
        public TransactionStatus? Status { get; set; }

        /// <summary>
        /// Gets or sets field is returned when the message was sent to the card issuer for approval.
        /// </summary>
        [JsonProperty(PropertyName = "auth_code")]
        public string AuthorizationCode { get; set; }

        /// <summary>
        /// Gets or sets the response code from the Qualpay payment gateway
        /// </summary>
        [JsonProperty(PropertyName = "rcode")]
        [JsonConverter(typeof(StringEnumConverter))]
        public PaymentGateway.PaymentGatewayResponseCode? ResponseCode { get; set; }

        /// <summary>
        /// Gets or sets masked card number. 
        /// </summary>
        [JsonProperty(PropertyName = "card_number")]
        public string CardNumber { get; set; }

        /// <summary>
        /// Gets or sets card type. The card type is derived from the card number.
        /// </summary>
        [JsonProperty(PropertyName = "card_type")]
        [JsonConverter(typeof(StringEnumConverter))]
        public CardType? CardType { get; set; }

        /// <summary>
        /// Gets or sets purchase ID of the transaction
        /// </summary>
        [JsonProperty(PropertyName = "purchase_id")]
        public string PurchaseId { get; set; }

        /// <summary>
        /// Gets or sets a unique identifier generated by the payment gateway for each transaction. 
        /// </summary>
        [JsonProperty(PropertyName = "pg_id")]
        public string TransactionId { get; set; }

        /// <summary>
        /// Gets or sets first name of card holder
        /// </summary>
        [JsonProperty(PropertyName = "cardholder_first_name")]
        public string CardholderFirstName { get; set; }

        /// <summary>
        /// Gets or sets last name of card holder
        /// </summary>
        [JsonProperty(PropertyName = "cardholder_last_name")]
        public string CardholderLastName { get; set; }

        /// <summary>
        /// Gets or sets the transaction amount. 
        /// </summary>
        [JsonProperty(PropertyName = "amt_tran")]
        public decimal? Amount { get; set; }

        /// <summary>
        /// Gets or sets the ISO numeric currency code for the transaction. 
        /// </summary>
        [JsonProperty(PropertyName = "tran_currency")]
        public int? CurrencyIsoCode { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the transaction is disputed.
        /// </summary>
        [JsonProperty(PropertyName = "dispute_flag")]
        public bool? IsDisputed { get; set; }

        /// <summary>
        /// Gets or sets an amount refunded if there are any refunds
        /// </summary>
        [JsonProperty(PropertyName = "amt_refunded")]
        public decimal? AmountRefunded { get; set; }

        /// <summary>
        /// Gets or sets a settlement batch number
        /// </summary>
        [JsonProperty(PropertyName = "batch_number")]
        public long? BatchNumber { get; set; }

        /// <summary>
        /// Gets or sets DBA name used in the transaction
        /// </summary>
        [JsonProperty(PropertyName = "dba_name")]
        public string DbaName { get; set; }

        /// <summary>
        /// Gets or sets customer Vault ID
        /// </summary>
        [JsonProperty(PropertyName = "customer_id")]
        public string CustomerId { get; set; }
        
        /// <summary>
        /// Gets or sets Qualpay generated ID that identifies a subscription
        /// </summary>
        [JsonProperty(PropertyName = "subscription_id")]
        public long? SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets a reference value that will be stored with the transaction data and included with transaction data in reports within Qualpay Manager. This value will also be attached to any lifecycle transactions (e.g. retrieval requests and chargebacks) that may occur.
        /// </summary>
        [JsonProperty(PropertyName = "merch_ref_num")]
        public string MerchantReferenceInfo { get; set; }

        /// <summary>
        /// Gets or sets an unique ID assigned by Qualpay to this batch.
        /// </summary>
        [JsonProperty(PropertyName = "batch_id")]
        public long? BatchId { get; set; }

        /// <summary>
        /// Gets or sets the date the batch was settled to Qualpay.
        /// </summary>
        [JsonProperty(PropertyName = "batch_date")]
        public string BatchDate { get; set; }

        /// <summary>
        /// Gets or sets the date Qualpay settled the transaction with the issuer.
        /// </summary>
        [JsonProperty(PropertyName = "settle_date")]
        public string SettleDate { get; set; }

        /// <summary>
        /// Gets or sets the amount of this transaction funded to the merchant (in the funded currency).
        /// </summary>
        [JsonProperty(PropertyName = "amt_funded")]
        public decimal? AmountFunded { get; set; }

        /// <summary>
        /// Gets or sets the ISO 4217 numeric currency code of the transaction.
        /// </summary>
        [JsonProperty(PropertyName = "funded_currency")]
        public string FundedCurrency { get; set; }

        #endregion
    }
}